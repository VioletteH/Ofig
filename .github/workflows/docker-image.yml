name: CI/CD Pipeline with Docker Compose and Jest

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3 

    - name: Build and bring up services with Docker Compose
      run: |
        set -a
        source ./docker.env.prod
        set +a
        docker compose -f docker-compose.prod.yml build
        docker compose -f docker-compose.prod.yml up -d --wait

    - name: Install dependencies in main service for Biome/Jest
      run: docker compose -f docker-compose.prod.yml exec ofig-main-prod npm install

    - name: Run Biome checks (format and lint)
      run: docker compose -f docker-compose.prod.yml exec ofig-main-prod npm run check
    
    - name: Export DB env vars from .env.test
      run: |
        set -a
        source .env.test
        set +a
        echo "DB_USER=$DB_USER" >> $GITHUB_ENV
        echo "DB_NAME=$DB_NAME" >> $GITHUB_ENV
        echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV

    - name: Run SQL init script before tests
      run: |
        docker compose -f docker-compose.prod.yml exec \
          -e PGPASSWORD=$DB_PASSWORD \
          ofig-db-prod \
          psql -U $DB_USER -d $DB_NAME -f /docker-entrypoint-initdb.d/init.sql

    - name: Run Jest tests
      run: docker compose -f docker-compose.prod.yml exec ofig-main-prod npm test

    - name: Clean up Docker Compose services
      if: always()
      run: docker compose -f docker-compose.prod.yml down
